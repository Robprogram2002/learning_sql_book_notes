-- partially obscure the email address in the customer table
CREATE VIEW customer_vw 
    (customer_id, first_name, last_name, email) AS 
    SELECT customer_id, first_name, last_name,
        concat(substr(email,1,2), '*****', substr(email, -4)) email 
    FROM customer;

-- The first part of the statement lists the viewâ€™s column names, which may be different from those of the 
-- underlying table. The second part of the statement is a select statement, which must contain one expression 
-- for each column in the view. The email column is generated by taking the first two characters of the email 
-- address, concatenated with '*****', and then concatenated with the last four characters of the email address.

-- the database server simply stores the view definition for future use; the query is not executed, and no 
-- data is retrieved or stored. 

SELECT first_name, last_name, email 
FROM customer_vw;

describe customer_vw;

SELECT first_name, count(*), min(last_name), 
    max(last_name) 
FROM customer_vw
WHERE first_name LIKE 'J%' 
GROUP BY first_name 
HAVING count(*) > 1 
ORDER BY 1;

-- you can join views to other tables (or even to other views) within a query, as in:

SELECT cv.first_name, cv.last_name, p.amount 
FROM customer_vw cv 
    INNER JOIN payment p 
    ON cv.customer_id = p.customer_id 
WHERE p.amount >= 11;

